#!/usr/bin/env bash

# heavily shrinked version of https://github.com/bashdot/bashdot/blob/master/bashdot

set -e

current_working_dir=$(pwd)

LOGGER_FMT=${LOGGER_FMT:="%Y-%m-%d"}
LOGGER_LVL=${LOGGER_LVL:="info"}

if [ ! -z "$BASHDOT_LOG_LEVEL" ]; then
  LOGGER_LVL=$BASHDOT_LOG_LEVEL
fi

action=$1

usage() {
  case "$1" in
    commands)
      echo "Usage: bashdot [install|before|after] OPTIONS"
      ;;
    install)
      echo "Usage: bashdot install PROFILE1 PROFILE2 ... PROFILEN"
      ;;
    before)
      echo "Usage: bashdot before PROFILE1 PROFILE2 ... PROFILEN"
      ;;
    after)
      echo "Usage: bashdot after PROFILE1 PROFILE2 ... PROFILEN"
      ;;
  esac
}

if [ "$action" != "install" ] &&
   [ "$action" != "before" ] &&
   [ "$action" != "after" ]; then
  usage commands
  exit 1
fi

exit_if_profile_directories_contain_invalid_characters() {
  profile_dir=$1
  if ls "$profile_dir" | grep -E '[[:space:]:,/\]'; then
    log error "Files in '$profile_dir' contain invalid characters."
    exit 1
  fi
}

exit_if_invalid_directory_name() {
  dir=$1
  if ! echo "$dir" | grep "^[/.a-zA-Z0-9_-]*$" > /dev/null; then
    log error "Current working directory '$dir' has an invalid character. The directory you are in when you install a profile must have alpha numberic characters, with only dashes, dots or underscores."
    exit 1
  fi
}

exit_if_invalid_profile_name() {
  profile=$1
  if ! echo "$profile" | grep "^[a-zA-Z0-9_-]*$" > /dev/null; then
    log error "Invalid profile name '$profile'. Profiles must be alpha numeric with only dashes or underscores."
    exit 1
  fi
}

log() {
  log_level=$1 && shift

  case "$log_level" in
    debug)  [[ "$LOGGER_LVL" =~ debug ]]           && echo "$( date "+${LOGGER_FMT}" ) - DEBUG - $@" 1>&2 ;;
    info)   [[ "$LOGGER_LVL" =~ debug|info ]]      && echo "$( date "+${LOGGER_FMT}" ) - INFO - $@" 1>&2  ;;
    warn)   [[ "$LOGGER_LVL" =~ debug|info|warn ]] && echo "$( date "+${LOGGER_FMT}" ) - WARN - $@" 1>&2  ;;
    error)  [[ ! "$LOGGER_LVL" =~ none ]]          && echo "$( date "+${LOGGER_FMT}" ) - ERROR - $@" 1>&2 ;;
  esac

  true
}

install() {
  profile=$1
  profile_dir="$current_working_dir/$profile"
  symlinks_dir="$profile_dir/symlinks"

  exit_if_profile_directories_contain_invalid_characters "$profile_dir"

  if [ ! -d "$profile_dir" ]; then
    log error "Profile '$profile' directory does not exist."
    exit 1
  fi

  log info "Adding dotfiles profile '$profile'."

  log info "Installing dotfiles from '$profile_dir'."
  cd $symlinks_dir
  for dir in $(ls -d */); do
    if ls $dir/*/ &>/dev/null; then
      for subdir in $(ls -d $dir*/); do
        # only stow subdirectories
        targetdir=$(basename "${subdir/dot-/.}")
        mkdir -p "$HOME/$targetdir"
        (cd $dir && stow $(basename "$subdir") --target "$HOME/$targetdir" --dotfiles --verbose="1")
      done
    else
      stow "$dir" --target "$HOME" --dotfiles --verbose="1"
    fi
  done

  log info "Completed adding dotfiles profile '$profile'."
}

before() {
  profile=$1
  profile_dir="$current_working_dir/$profile"
  run_dir="$profile_dir/run"
  before_dir="$run_dir/before"

  exit_if_profile_directories_contain_invalid_characters "$profile_dir"

  if [ ! -d "$profile_dir" ]; then
    log error "Profile '$profile' directory does not exist."
    exit 1
  fi

  log info "Run before scripts for dotfiles profile '$profile'."

  if [ -e "$before_dir" ]; then
    for file in $(ls "$before_dir"); do
        log info "Run $file script."
        (cd $before_dir && ./$file)
    done
  else
    log debug "$profile doesn't have before scripts"
  fi

  log info "Completed running before scripts for dotfiles profile '$profile'."
}

after() {
  profile=$1
  profile_dir="$current_working_dir/$profile"
  run_dir="$profile_dir/run"
  after_dir="$run_dir/after"

  exit_if_profile_directories_contain_invalid_characters "$profile_dir"

  if [ ! -d "$profile_dir" ]; then
    log error "Profile '$profile' directory does not exist."
    exit 1
  fi

  log info "Run after scripts for dotfiles profile '$profile'."

  if [ -e "$after_dir" ]; then
    for file in $(ls "$after_dir"); do
        log info "Run $file script."
        (cd $after_dir && ./$file)
    done
  else
    log debug "$profile doesn't have after scripts"
  fi

  log info "Completed running after scripts for dotfiles profile '$profile'."
}

case "$action" in
  install)
    ;&
  before)
    ;&
  after)
    if [ $# -lt 2 ]; then
      usage $action
      exit 1
    fi

    exit_if_invalid_directory_name "$current_working_dir"

    while true; do
      shift

      if [ -z "$1" ];then
        break
      fi

      exit_if_invalid_profile_name "$1"
      $action "$1"
    done

    log info "Completed '$action' of all profiles succesfully."
    ;;
esac
